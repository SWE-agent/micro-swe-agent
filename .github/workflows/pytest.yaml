
name: Pytest

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - 'README.md'
      - 'mkdocs.yml'
      - '.cursor/**'
      - '.github/workflows/build-docs.yaml'
      - '.github/workflows/release.yaml'
      - '.github/workflows/pylint.yaml'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - 'README.md'
      - 'mkdocs.yml'
      - '.cursor/**'
      - '.github/workflows/build-docs.yaml'
      - '.github/workflows/release.yaml'
      - '.github/workflows/pylint.yaml'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            python-version: '3.11'
          - os: ubuntu-latest
            python-version: '3.13'
          - os: windows-latest
            python-version: '3.11'
          - os: macos-latest
            python-version: '3.11'
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install podman and singularity (Linux)
        if: runner.os == 'Linux'
        run: |
            sudo apt-get update
            sudo apt-get install -y podman
            # Install singularity/apptainer
            sudo apt-get install -y wget
            cd /tmp
            wget https://github.com/apptainer/apptainer/releases/download/v1.3.4/apptainer_1.3.4_amd64.deb
            sudo dpkg -i apptainer_1.3.4_amd64.deb || sudo apt-get install -f -y
            # Create singularity symlink for compatibility
            sudo ln -sf /usr/bin/apptainer /usr/bin/singularity
      - name: Setup Docker (macOS)
        if: runner.os == 'macOS'
        uses: douglascamata/setup-docker-macos-action@v1-alpha
      - name: Verify Docker (Windows)
        if: runner.os == 'Windows'
        run: |
            # Windows Server comes with Docker Engine, just verify it works
            docker version || echo "Docker not available on Windows runner, skipping container tests"
      - name: Install dependencies
        run: |
            pip install -e '.[full]'
            pip install pytest pytest-cov pytest-xdist
      - name: Run pytest
        run: pytest -v --cov --cov-branch --cov-report=xml -n auto
      - name: Upload coverage reports to Codecov
        if: runner.os == 'Linux' && matrix.python-version == '3.13'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: SWE-agent/micro-swe-agent